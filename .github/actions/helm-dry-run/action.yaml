name: Helm Dry Run
description: Try to upgrade a Helm Chart

inputs: 
  
  namespace:
    description: 'Namespace to diff'
    required: true
  
  chart:
    description: 'Chart to deploy'
    required: true
  
  kube_config:
    description: 'Kube config secret as base64 string'
    required: true

  repo_name:
    description: 'Name of the Helm repo'
    required: false
    default: forestsoft
   
  version:
    description: 'Chart Version to use'
    required: false
    default: ''

  repo:
    description: 'URL to repo'
    required: false
    default: 'https://forestsoftgmbh.github.io/helm-charts/charts'
  
  release_name:
    description: 'Name of the release'
    required: true

  values:
    description: 'Path to Values to use'
    default: ''
    required: false

  image_tag:
    description: 'Image tag to use'
    required: false

runs:
  using: "composite"
  steps:
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/kube-credentials@main
      with:
        kube_config: ${{ inputs.kube_config }}
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/helm-repo@main
      if: inputs.repo != ''
      with:
        repo_name: ${{ inputs.repo_name }}
        repo: ${{ inputs.repo }}
    - name: "Helm Dry Run"
      shell: bash
      env:
        TERM: xterm-color
      run: |
        OPTS=""
        if [ "${{ inputs.version }}" != "" ]; then
          OPTS="$OPTS --version ${{ inputs.version }}"
        fi
        
        if [ "${{inputs.values}}" != "" ]; then
          OPTS="$OPTS -f ${{inputs.values}}"
        fi
        
        if [ "${{inputs.image_tag}}" != "" ]; then
          OPTS="$OPTS  --set image.tag=${{inputs.image_tag}} --set database.image.tag=${{inputs.image_tag}}"
        fi
        helm upgrade --install --dry-run $OPTS --namespace ${{ inputs.namespace }} ${{ inputs.release_name }} ${{ inputs.chart }}
        
        
        
       
