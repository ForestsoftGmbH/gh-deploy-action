module.exports = async ({ github, context }) => {
    try {
        const { repo, owner } = context.repo;
        const headBranch = context.payload.ref.replace("refs/heads/", "");
        const result = await github.rest.pulls.create({
            title: `${context.payload.head_commit.message}`,
            owner,
            repo,
            head: headBranch,
            base: 'main',
            body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
            ].join('\n')
        });
        let labels = [];
        switch (true) {
            case headBranch.startsWith('feature/'):
            case headBranch.startsWith('feat/'):
                labels.push('enhancement');
                break;
            case headBranch.startsWith("fix/"):
            case headBranch.startsWith("bugfix/"):
            case headBranch.startsWith("hotfix/"):
                labels.push('bug');
                break;
            default:
                console.log('No label found');
                break;
        }
        github.rest.issues.addLabels({
            owner,
            repo,
            issue_number: result.data.number,
            labels: labels
        });
        core.setOutput('result', result.data.number);
    } catch (error) {
        console.log(error);
    }
};