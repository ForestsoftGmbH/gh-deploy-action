name: Helm Deploy
description: Deploy a chart through Helm

inputs: 
  namespace:
    description: 'Namespace to diff'
    required: true
  
  chart:
    description: 'Chart to deploy'
    required: true
  
  kube_config:
    description: 'Kube config secret as base64 string'
    required: true

  repo_name:
    description: 'Name of the Helm repo'
    required: false
    default: forestsoft
  
  repo:
    description: 'URL to repo'
    required: false
    default: 'https://forestsoftgmbh.github.io/helm-charts/charts'
  
  release_name:
    description: 'Name of the release'
    required: true
 
  values:
    description: 'Path to Values to use'
    required: true

  image_tag:
    description: 'Image tag to use'
    required: true

  test_release:
    description: 'Run Helm tests after release'
    required: false
    default: 'false'

  dry_run:
    description: 'Dry run'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/helm-repo@main
      if: inputs.repo != ''
      with:
        repo_name: ${{ inputs.repo_name }}
        repo: ${{ inputs.repo }}
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/helm-dependency-update@main
      with:
        chart: ${{ inputs.chart }}
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/helm-diff@main
      name: Validate Helm Chart
      with:
        namespace: ${{ inputs.namespace }}
        chart: ${{ inputs.chart }}
        release_name: ${{ inputs.release_name }}
        repo: ${{ inputs.repo }}
        values: ${{ inputs.values }}
        image_tag: ${{ inputs.image_tag }}
        kube_config: ${{ inputs.kube_config }}
    
    - uses: ForestsoftGmbH/gh-deploy-action/.github/actions/helm-dry-run@main
      name: Dry Run Helm Chart
      with:
        namespace: ${{ inputs.namespace }}
        chart: ${{ inputs.chart }}
        repo: ${{ inputs.repo }}
        release_name: ${{ inputs.release_name }}
        values: ${{ inputs.values }}
        image_tag: ${{ inputs.image_tag }}
        kube_config: ${{ inputs.kube_config }}
    - name: "Helm Deploy"
      if: inputs.dry_run == 'false'
      shell: bash
      env:
        TERM: xterm-color
        HELM_DIFF_COLOR: "true"
      run: |
        helm upgrade --install --namespace ${{ inputs.namespace }} -f ${{ inputs.values }} --set image.tag=${{inputs.image_tag}} --set database.image.tag=${{inputs.image_tag}} ${{ inputs.release_name }} ${{ inputs.chart }}
    - name: "Test release"        
      shell: bash
      if: inputs.test_release == 'true'
      env:
        TERM: xterm-color
        HELM_DIFF_COLOR: "true"
      run: |
        helm test ${{ inputs.release_name }}
       
